<?xml version="1.0"?>

<project default="all" name="globus_wsrf_core" basedir=".">
    <description>
        Java WS Core Implementation
    </description>

    <!-- 
    Give user a chance to override without editing this file
    (and without typing -D each time it compiles it) 
    -->
    
    <property environment="env"/>
 
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>
    
    <property name="name" value="Globus Toolkit Java WS Core"/>
    <property name="version" value="4.0.3"/>
    <property name="globus.copyright" value="Copyright &#169; 1999-2003 University of Chicago and The University of Southern California.  All rights reserved."/>
    <property name="env.GLOBUS_LOCATION" value="../../../install"/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="base.name" value="wsrf_core"/>
    <property name="package.name" value="globus_${base.name}"/>
    <property name="gar.name" value="${package.name}.gar"/>
    <property name="jar.name" value="${base.name}.jar"/>
    <property name="stubs.jar.name" value="${base.name}_stubs.jar"/>
    <property name="src.dir" value="src"/>
    <property name="build.dir"  location="build"/>
    <property name="build.dest" location="build/classes"/>
    <property name="build.lib.dir" location="build/lib"/>
    <property name="build.javadocs" value="${build.dir}/javadocs"/>
    <property name="stubs.dir" location="build/stubs"/>
    <property name="stubs.src" location="build/stubs/src"/>
    <property name="stubs.dest" location="build/stubs/classes"/>
    <property name="build.packages" location=
        "${deploy.dir}/share/globus_wsrf_common/build-packages.xml"/>
    <property name="build.stubs" location=
        "${deploy.dir}/share/globus_wsrf_tools/build-stubs.xml"/>
    <property name="java.debug" value="on"/>
    <property name="java.deprecation" value="true"/>

    <property name="src.dir"   location="src"/>

    <property name="schema.src"   location="${deploy.dir}/share/schema"/>
    <property name="schema.dest"  location="${build.dir}/schema"/>

    <property name="garjars.id" value="garjars"/>
    <fileset dir="${build.lib.dir}" id="garjars"/>

    <property name="garschema.id" value="garschema"/>
    <fileset dir="${schema.dest}" id="garschema"/>

    <property name="garetc.id" value="garetc"/>
    <fileset dir="etc" id="garetc"/>

    <property name="garshare.id" value="garshare"/>
    <fileset dir="share" id="garshare"/>
<!--
    <property name="gardocs.id" value="gardocs"/>
    <fileset dir="docs" id="gardocs"/>
-->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.lib.dir}"/>

        <mkdir dir="${stubs.dir}"/>
        <mkdir dir="${stubs.src}"/>
        <mkdir dir="${stubs.dest}"/>

        <mkdir dir="${schema.dest}"/>
        <copy toDir="${schema.dest}">
            <fileset dir="${schema.src}" casesensitive="yes">
                <include name="core/notification/**"/>
                <include name="core/security/**"/>
                <include name="core/types/**"/>
                <include name="core/management/**"/>
                <include name="wsrf/**"/>
                <include name="ws/**"/>
            </fileset>
        </copy>

        <!-- this should match the last thing generated in "stubs" target -->
        <available property="stubs.present" type="dir" 
                   file="${stubs.src}/org/globus/wsrf/core/notification" />

        <condition property="compiler.jvmarg" value="-source 1.4">
          <equals arg1="${ant.java.version}" arg2="1.5"/>
        </condition>
        <condition property="compiler.jvmarg" value="">
         <not>
           <isset property="${compiler.jvmarg}"/>
         </not>
        </condition>
    </target>

    <target name="stubs" unless="stubs.present" depends="init">
        <property name="mapping.file" 
                  value="${basedir}/share/NStoPkg.properties"/>

        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/wsrf/properties"/>
            <property name="wsdl.file" 
                value="WS-ResourceProperties_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
        </ant>

        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/wsrf/lifetime"/>
            <property name="wsdl.file" 
                value="WS-ResourceLifetime_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
        </ant>

        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/wsrf/notification"/>
            <property name="wsdl.file" 
                value="WS-BaseN_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
        </ant>

       <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/wsrf/servicegroup"/>
            <property name="wsdl.file" 
                value="WS-ServiceGroup_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
       </ant>

       <!-- WS-Enumeration -->
       <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/ws/enumeration"/>
            <property name="wsdl.file" 
                value="enumeration_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
       </ant>

        <!-- Security, WS Secure Conversation -->
        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/security/secconv"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
            <property name="wsdl.file" 
                value="secure_conversation_service.wsdl"/>
        </ant>

        <!-- Authorization -->
        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/security/authorization"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
            <property name="wsdl.file" value="authz_service.wsdl"/>
        </ant>
        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/types"/>
            <property name="wsdl.file" 
                value="timestamp.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
        </ant>

        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="ns.excludes" value=""/>
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/notification"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
            <property name="wsdl.file" 
                value="subscription_manager_service.wsdl"/>
        </ant>        

        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/notification"/>
            <property name="wsdl.file" 
                value="notification_consumer_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
        </ant>

        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/management"/>
            <property name="wsdl.file" 
                value="shutdown_service.wsdl"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
        </ant>

        <copy toDir="${stubs.src}" overwrite="yes">
            <fileset dir="${src.dir}" casesensitive="yes">
                <include name="org/oasis/**/*"/>
            </fileset>
        </copy>
    </target>
  
    <target name="compileStubs" depends="stubs">
       <javac srcdir="${stubs.src}" destdir="${stubs.dest}"
       		source="1.4"
            debug="${java.debug}" deprecation="${java.deprecation}">
            <include name="**/*.java"/>
            <classpath>
                <fileset dir="${deploy.dir}/lib">
                    <include name="*.jar"/>
                    <exclude name="${stubs.jar.name}"/>
                    <exclude name="${jar.name}"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="compile" depends="compileStubs">
        <javac srcdir="${src.dir}" destdir="${build.dest}"
       		source="1.4"
            debug="${java.debug}" deprecation="${java.deprecation}">
            <include name="**/*.java"/>
            <exclude name="org/oasis/**"/>
            <classpath>
                <pathelement location="${stubs.dest}"/>
                <fileset dir="${deploy.dir}/lib">
                    <include name="*.jar"/>
                    <exclude name="${stubs.jar.name}"/>
                    <exclude name="${jar.name}"/>
                </fileset>
            </classpath>
            <compilerarg line="${compiler.jvmarg}"/>
        </javac>
	<copy todir="${build.dest}" >
	      <fileset dir="${src.dir}" includes="**/*.properties" />
	      <fileset dir="${src.dir}" includes="**/*.xml" />
	</copy>
    </target>

    <target name="jarStubs" depends="compileStubs">
        <jar destfile="${build.lib.dir}/${stubs.jar.name}" 
             basedir="${stubs.dest}"/>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${build.lib.dir}/${jar.name}" basedir="${build.dest}"/>
    </target>

    <target name="dist" depends="jarStubs, jar">
        <ant antfile="${build.packages}" target="makeGar">
            <reference refid="${garjars.id}"/>  
            <reference refid="${garschema.id}"/>  
            <reference refid="${garetc.id}"/>  
<!--            <reference refid="${gardocs.id}"/>  -->
            <reference refid="${garshare.id}"/>  
        </ant>            
    </target>

    <target name="clean">
        <delete dir="tmp"/>
        <delete dir="${build.dir}"/>
        <delete file="${gar.name}"/>
    </target>

    <target name="deploy" depends="dist">
        <ant antfile="${build.packages}" target="deployGar">
            <property name="noSchema" value="true"/>
        </ant>
    </target>  

    <target name="undeploy">
        <ant antfile="${build.packages}" target="undeployGar">
            <property name="gar.id" value="${package.name}"/>
        </ant>
    </target>

    <target name="all" depends="deploy"/>

   <target name="javadocs" depends="compile">
    <mkdir dir="${build.javadocs}"/>
    <javadoc destdir="${build.javadocs}"
             author="true"
             version="true"
             use="true"
             windowtitle="${name} ${version} API"
             doctitle="${name} ${version}"
             bottom="${globus.copyright}">
      <classpath>
        <fileset dir="${deploy.dir}/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
      <link href="http://ws.apache.org/axis/java/apiDocs/"/>
      <link href="http://ws.apache.org/ws-fx/addressing/apidocs/"/>
      <link href="http://www-unix.mcs.anl.gov/~gawor/jglobus-nightly/globus_4_0_branch/javadoc/"/>
      <packageset dir="${src.dir}" defaultexcludes="yes"/>
      <packageset dir="${stubs.src}" defaultexcludes="yes"/>
    </javadoc>
  </target>

</project>
