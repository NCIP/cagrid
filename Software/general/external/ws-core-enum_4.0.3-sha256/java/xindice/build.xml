<?xml version="1.0"?>

<project default="all" name="globus_wsrf_xindice" basedir=".">
    <description>
        WSRF InterOp Test Implementation
    </description>

    <!-- 
    Give user a chance to override without editing this file
    (and without typing -D each time it compiles it) 
    -->
    
    <property environment="env"/>
    
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>
    
    <property name="env.GLOBUS_LOCATION" location="../../install"/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="package.name" value="globus_wsrf_xindice"/>
    <property name="gar.name" value="${package.name}.gar"/>
    <property name="jar.name" value="wsrf_xindice.jar"/>
    <property name="build.dir"  location="build"/>
    <property name="build.dest" location="build/classes"/>
    <property name="build.lib.dir" location="build/lib"/>
    <property name="lib.dir" location="lib"/>
    <property name="build.packages" location=
        "${deploy.dir}/share/globus_wsrf_common/build-packages.xml"/>
    <property name="java.debug" value="on"/>

    <property name="test-reports.dir" value="test-reports"/>
    <property name="junit.haltonfailure" value="true"/>

    <property name="schema.src"   location="${deploy.dir}/share/schema"/>
    <property name="schema.dest"  location="${build.dir}/schema"/>

    <property name="garjars.id" value="garjars"/>
    <fileset dir="${build.lib.dir}" id="garjars"/>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.lib.dir}"/>
        <copy toDir="${build.lib.dir}">
            <fileset dir="${lib.dir}" casesensitive="yes">
                <include name="*"/>
            </fileset>
        </copy>

    </target>

    <target name="jar" depends="init">
       <!--
        <jar destfile="${build.lib.dir}/${jar.name}" basedir="${build.dest}"/>
       -->
    </target>

    <target name="dist" depends="jar">
        <ant antfile="${build.packages}" target="makeGar">
            <property name="gar.name" value="${build.lib.dir}/${gar.name}"/>
            <reference refid="${garjars.id}"/>  
            <reference refid="${garschema.id}"/>  
        </ant>            
    </target>

    <target name="clean">
        <delete dir="tmp"/>
        <delete dir="${build.dir}"/>
        <delete file="${gar.name}"/>
        <delete dir="${test-reports.dir}"/>
    </target>

    <target name="deploy" depends="dist">
        <ant antfile="${build.packages}" target="deployGar">
            <property name="gar.name" value="${build.lib.dir}/${gar.name}"/>
            <property name="gar.id" value="${package.name}"/>
            <!-- <property name="noSchema" value="true"/> -->
        </ant>
    </target>  

    <target name="undeploy">
        <ant antfile="${build.packages}" target="undeployGar">
            <property name="gar.id" value="${package.name}"/>
        </ant>
    </target>

    <target name="all" depends="deploy"/>

    
</project>
