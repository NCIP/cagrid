<?xml version="1.0"?>

<project default="deploy" name="globus_wsrf" basedir=".">
    <description>
        Targets for building and testing all of Java WS Core
    </description>

    <!-- 
    Give user a chance to override without editing this file
    (and without typing -D each time it compiles it) 
    -->

    <property environment="env"/>
    
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>

    <property name="env.GLOBUS_LOCATION" value="install"/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
 
    <property name="version" value="4.0.3"/>

    <property name="build.tools.test"
        location="java/tools/test"/>
    <property name="build.core.test"
        location="java/core/test"/>

    <property name="build.core.samples"
        location="java/core/samples"/>

    <property name="build.tools.src" 
        location="java/tools/source"/>
    <property name="build.common.src" 
        location="java/common/source"/>
    <property name="build.usage.src" 
        location="java/usage/source"/>
    <property name="build.provider.src" 
        location="java/provider/source"/>
    <property name="build.core.src" 
        location="java/core/source"/>
    <property name="build.registry.src" 
        location="java/registry/source"/>
    <property name="build.schema"
        location="schema"/>

    <!-- *************** BASE TARGETS ***************** -->

    <target name="deployProvider">
        <ant dir="${build.provider.src}" target="deploy"/>
    </target>
    <target name="deploy">
        <ant dir="${build.common.src}" target="deploy">
             <reference refid="clover.filesets"/>
        </ant>
        <ant dir="${build.usage.src}" target="deploy"/>
        <ant dir="${build.tools.src}" target="deploy"/>
        <ant dir="${build.schema}" target="deploy"/>
        <ant dir="${build.core.src}" target="deploy">
            <reference refid="clover.filesets"/>
        </ant>
        <ant dir="${build.registry.src}" target="deploy">
            <reference refid="clover.filesets"/>
        </ant>
    </target>

    <target name="cleanProvider">
        <ant dir="${build.provider.src}" target="clean"/>
    </target>
    <target name="cleanDeploy">
        <ant dir="${build.common.src}" target="clean"/>
        <ant dir="${build.tools.src}" target="clean"/>
        <ant dir="${build.usage.src}" target="clean"/>
        <ant dir="${build.core.src}" target="clean"/>
        <ant dir="${build.registry.src}" target="clean"/>
        <ant dir="${build.schema}" target="clean"/>
    </target>

    <target name="clean" depends="cleanDeploy, cleanTest, cleanSamples"/>

    <!-- *************** ALL TARGETS ***************** -->

    <target name="all" depends="deploy, deployTest, deploySamples"/>

    <target name="cleanAll" depends="clean">
        <delete dir="${deploy.dir}"/>
    </target>

    <!-- *************** TESTING TARGETS ***************** -->

    <property name="junit.reports.dir" 
              location="${basedir}/test-reports"/>
    <property name="junit.html.reports.dir" 
              location="${basedir}/test-reports-html"/>
    <property name="junit.haltonfailure" value="true"/>

    <target name="deployTest">
        <ant dir="${build.core.test}" target="deploy"/>
    	<ant dir="${build.tools.test}" target="deploy"/>
    </target>

    <target name="cleanTest">
        <ant dir="${build.tools.test}" target="clean"/>
        <ant dir="${build.core.test}" target="clean"/>
    </target>

    <target name="initTest">
       <delete dir="${junit.reports.dir}"/>
       <mkdir dir="${junit.reports.dir}"/>

    </target>

    <target name="test" depends="initTest">
       <ant dir="${build.tools.test}" target="test"/> 
       <ant dir="${build.core.test}" target="test"/>
    </target>

    <target name="testServer" depends="initTest">
       <ant dir="${build.tools.test}" target="testServer"/> 
       <ant dir="${build.core.test}" target="testServer"/>
    </target>

   <target name="generateTestReport"> 
       <delete dir= "${junit.html.reports.dir}"/>
       <mkdir dir = "${junit.html.reports.dir}"/>
       <junitreport todir="${junit.reports.dir}">
          <fileset dir="${junit.reports.dir}">
            <include name="TEST-*.xml"/>
          </fileset>
          <report format="frames" todir="${junit.html.reports.dir}"/>
      </junitreport>
  </target>

  <!-- *************** SAMPLE TARGETS ***************** -->

    <target name="deploySamples">
        <ant dir="${build.core.samples}" target="deploy"/>
    </target>

    <target name="cleanSamples">
        <ant dir="${build.core.samples}" target="clean"/>
    </target>

 <!-- =================================================================== -->
 <!-- Utility Tasks                                                       -->
 <!-- =================================================================== -->

 <target name="toUnix">
   <fixcrlf srcdir="."
       eol="lf"
       includes="**/*.java"/>
 </target>

 <!-- =================================================================== -->
 <!-- PMD                                                                 -->
 <!-- =================================================================== -->

 <target name="pmd">
   <property name="pmd.rules" value="rulesets/imports.xml,rulesets/unusedcode.xml,rulesets/imports.xml,rulesets/basic.xml"/>
   <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
   <pmd rulesetfiles="${pmd.rules}" shortFilenames="true">
      <formatter type="html" toFile="pmd_report.html"/>
      <fileset dir="java">
            <include name="**/*.java"/>
            <exclude name="**/stubs/**/*.java"/>
      </fileset>
   </pmd>
 </target>

 <!-- =================================================================== -->
 <!-- JavaDocs                                                            -->
 <!-- =================================================================== -->

 <target name="javadocs" depends="deploy">
    <property name="name" value="Globus Toolkit Java WS Core"/>
    <property name="globus.copyright" value="Copyright &#169; 1999-2003 University of Chicago and The University of Southern California.  All rights reserved."/>  
    <property name="javadocs.dir" value="javadocs"/>
    <delete dir="$javadocs.dir}"/>
    <mkdir dir="${javadocs.dir}"/>
    <javadoc destdir="${javadocs.dir}"
             author="true"
             version="true"
             use="true"
             windowtitle="${name} ${version} API"
             doctitle="${name} ${version}"
             bottom="${globus.copyright}">
      <classpath>
        <fileset dir="${deploy.dir}/lib">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${ant.home}/lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
      <link href="http://ws.apache.org/axis/java/apiDocs/"/>
      <link href="http://ws.apache.org/ws-fx/addressing/apidocs/"/>
      <link href="http://www-unix.mcs.anl.gov/~gawor/jglobus-nightly/globus_4_0_branch/javadoc/"/>
      <packageset dir="${build.common.src}/src" defaultexcludes="yes"/>
      <packageset dir="${build.tools.src}/src" defaultexcludes="yes"/>
      <packageset dir="${build.core.src}/build/stubs/src" defaultexcludes="yes"/>
      <packageset dir="${build.core.src}/src" defaultexcludes="yes"/>
    </javadoc>
 </target>

 <!-- =================================================================== -->
 <!-- Clover                                                              -->
 <!-- =================================================================== -->

 <taskdef resource="clovertasks"/>

 <target name="initClover">
   <mkdir dir="clover-reports"/>
   <clover-setup initString="clover-reports/coverage.db">
    <fileset dir=".">
      <exclude name="**/stubs/**/*.java"/>
      <exclude name="**/bootstrap/**/*.java"/>
    </fileset>
   </clover-setup>
   <mkdir dir="${deploy.dir}/lib"/>
   <copy file="${ant.home}/lib/clover.jar" todir="${deploy.dir}/lib"
         failonerror="false"/>
 </target>

 <target name="generateCloverReport" depends="initClover">
   <clover-report>
      <current outfile="clover-reports-html" title="Globus Unit Tests">
         <format type="html"/>
      </current>
   </clover-report>
</target>


 <!-- =================================================================== -->
 <!-- FindBugs                                                            -->
 <!-- =================================================================== -->

 <target name="findbugs">
    <taskdef name="findbugs" 
             classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <findbugs home="${env.FINDBUGS_HOME}" output="html"
              outputFile="findbugs_report.html" jvmargs="-Xmx1024m"  >
      <auxClasspath>
         <fileset dir="${deploy.dir}/lib">
              <include name="*.jar" />
         </fileset>
      </auxClasspath>
      <class location="${deploy.dir}/lib/wsrf_core.jar" />
      <class location="${deploy.dir}/lib/wsrf_common.jar" />
      <class location="${deploy.dir}/lib/wsrf_tools.jar" />
    </findbugs>
  </target>

  <!-- =================================================================== -->
  <!-- Release stuff                                                       -->
  <!-- =================================================================== -->

  <property name="src.tag" value="HEAD"/>

  <!-- Creates a source distribution directly from cvs using -->
  <!-- ${src.tag} tag. By default the HEAD tag is used.      -->
  <target name="distsrc">
     <cvspass cvsroot=":pserver:anonymous@cvs.globus.org:/home/globdev/CVS/globus-packages"
              password="" passfile="cvspass.pwd" />
     <cvs cvsRoot=":pserver:anonymous@cvs.globus.org:/home/globdev/CVS/globus-packages"
          passfile="cvspass.pwd" 
          package="wsrf"
	  dest="."
	  command="export -r ${src.tag} -d ws-core-${version}" />

     <zip zipfile="ws-core-${version}-src.zip"
	  basedir="."
          includes="ws-core-${version}/**"
	  excludes="ws-core-${version}/compact/**,
                    ws-core-${version}/c/**"/>

     <tar destfile="ws-core-${version}-src.tar.gz" 
          longfile="gnu" compression="gzip">
       <tarfileset dir=".">
         <include name="ws-core-${version}/**"/>
         <exclude name="ws-core-${version}/compact/**"/>
         <exclude name="ws-core-${version}/c/**"/>
       </tarfileset>
     </tar>

 </target>

 <!-- Creates a binary distribution from current checkout -->

 <target name="distbin">
    <property name="dist.name" value="ws-core-${version}"/>

    <antcall target="all">
      <param name="deploy.dir" value="${basedir}/${dist.name}"/>
      <param name="all.scripts" value="true"/>
    </antcall>

    <antcall target="_createArchive"/>
 </target>

 <target name="distbinSmall">
    <property name="dist.name" value="ws-core-small-${version}"/>

    <antcall target="deploy">
      <param name="deploy.dir" value="${basedir}/${dist.name}"/>
      <param name="all.scripts" value="true"/>
    </antcall>

    <delete dir="${basedir}/${dist.name}/share/schema/core/samples"/>
    <delete dir="${basedir}/${dist.name}/share/schema/core/tests"/>

    <antcall target="_createArchive"/>
 </target>

 <target name="_createArchive">
    <!-- serlet.jar is not needed -->
    <delete>
      <fileset dir="${dist.name}" includes="**/servlet.*"/>
    </delete>

    <zip zipfile="${dist.name}-bin.zip"
	 basedir="."
         includes="${dist.name}/**"/>

    <tar destfile="${dist.name}-bin.tar.gz" 
         longfile="gnu" compression="gzip">

      <tarfileset dir="." mode="755">
        <include name="${dist.name}/bin/**"/>
        <exclude name="${dist.name}/bin/**/*.bat"/>
      </tarfileset>
      <tarfileset dir=".">
        <include name="${dist.name}/bin/**/*.bat"/>
      </tarfileset>

      <tarfileset dir="." mode="600">
        <include name="${dist.name}/etc/**/*jndi-config.xml"/>
        <include name="${dist.name}/etc/**/*server-config.wsdd"/>
      </tarfileset>
      <tarfileset dir=".">
        <include name="${dist.name}/etc/**"/>
        <exclude name="${dist.name}/etc/**/*jndi-config.xml"/>
        <exclude name="${dist.name}/etc/**/*server-config.wsdd"/>
      </tarfileset>

      <tarfileset dir=".">
        <include name="${dist.name}/**"/>
        <exclude name="${dist.name}/bin/**"/>
        <exclude name="${dist.name}/etc/**"/>
      </tarfileset>
    </tar>
 </target>

</project>
