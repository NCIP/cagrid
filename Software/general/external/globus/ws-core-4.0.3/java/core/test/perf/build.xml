<?xml version="1.0"?>

<project default="all" name="globus_wsrf_test_perf" basedir=".">
    <description>
        Performance Tests
    </description>

    <!-- 
    Give user a chance to override without editing this file
    (and without typing -D each time it compiles it) 
    -->
    
    <property environment="env"/>
 
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>
    
    <property name="env.GLOBUS_LOCATION" value="../../../../install"/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="base.name" value="wsrf_test_perf"/>
    <property name="package.name" value="globus_${base.name}"/>
    <property name="gar.name" value="${package.name}.gar"/>
    <property name="jar.name" value="${base.name}.jar"/>
    <property name="stubs.jar.name" value="${base.name}_stubs.jar"/>
    <property name="build.dir"  location="build"/>
    <property name="build.dest" location="build/classes"/>
    <property name="build.lib.dir" location="build/lib"/>
    <property name="build.packages" location=
        "${deploy.dir}/share/globus_wsrf_common/build-packages.xml"/>
    <property name="build.test" location=
        "${deploy.dir}/share/globus_wsrf_common/build-test.xml"/>
    <property name="build.stubs" location=
        "${deploy.dir}/share/globus_wsrf_tools/build-stubs.xml"/>
    <property name="stubs.dir" location="build/stubs"/>
    <property name="stubs.src" location="build/stubs/src"/>
    <property name="stubs.dest" location="build/stubs/classes"/>
    <property name="schema.src"   location="${deploy.dir}/share/schema"/>
    <property name="schema.dest"  location="${build.dir}/schema"/>
    <property name="java.debug" value="on"/>

    <property name="garjars.id" value="garjars"/>
    <fileset dir="${build.lib.dir}" id="garjars"/>

    <!-- etc directory for gar -->
    <property name="garetc.id" value="garEtc"/>
    <fileset dir="etc" id="garEtc"/>

    <property name="garschema.id" value="garschema"/>
    <fileset dir="${schema.dest}" 
        includes="tests/performance/*" 
        id="garschema"/>

    <property name="junit.reports.dir" value="test-reports"/>
    <property name="junit.haltonfailure" value="true"/>
    <property name="junit.timeout" value="900000000"/>
    <property name="junit.jvmarg" value="-Dignore -Xmx512m" />

    <property name="test.server.url" 
              value="http://localhost:8080/wsrf/services/"/>
    <property name="secure.test.server.url" 
              value="https://localhost:8443/wsrf/services/"/>

    <property name="test.security.type" value="transport"/>
    <property name="test.protection.type" value="signature"/>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.lib.dir}"/>

        <mkdir dir="${stubs.dir}"/>
        <mkdir dir="${stubs.src}"/>
        <mkdir dir="${stubs.dest}"/>

        <mkdir dir="${schema.dest}"/>
        <copy toDir="${schema.dest}">
            <fileset dir="${schema.src}" casesensitive="yes">
                <include name="core/tests/performance/**"/>
                <include name="wsrf/**"/>
                <include name="ws/**"/>
            </fileset>
        </copy>

        <available property="stubs.present" type="dir" 
            file="${stubs.src}/org/globus" />
    </target>

    <target name="stubs" unless="stubs.present" depends="init">
        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/tests/performance"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
            <property name="wsdl.file" 
                value="basic_perf_test_service.wsdl"/>
        </ant>       
        <ant antfile="${build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" 
                location="${schema.dest}/core/tests/performance"/>
            <property name="target.stubs.dir" location="${stubs.src}"/>
            <property name="wsdl.file" 
                value="counter_service.wsdl"/>
        </ant>       
    </target>
    
    <target name="compileStubs" depends="stubs">
        <javac srcdir="${stubs.src}" destdir="${stubs.dest}"
            debug="${java.debug}">
            <include name="**/*.java"/>
            <classpath>
                <fileset dir="${deploy.dir}/lib">
                    <include name="*.jar"/>
                    <exclude name="${stubs.jar.name}"/>
                    <exclude name="${jar.name}"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="compile" depends="compileStubs">
        <javac srcdir="src" destdir="${build.dest}" debug="${java.debug}">
            <include name="**/*.java"/>
            <classpath>
                <pathelement location="${stubs.dest}"/>
                <fileset dir="${deploy.dir}/lib">
                    <include name="*.jar"/>
                    <exclude name="${stubs.jar.name}"/>
                    <exclude name="${jar.name}"/>
                </fileset>
            </classpath>
        </javac>
	<copy todir="${build.dest}" >
	      <fileset dir="src" includes="**/*.properties" />
	      <fileset dir="src" includes="**/*.xml" />
	</copy>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${build.lib.dir}/${jar.name}" basedir="${build.dest}"/>
    </target>

    <target name="jarStubs" depends="compileStubs">
        <jar destfile="${build.lib.dir}/${stubs.jar.name}" 
            basedir="${stubs.dest}"/>
    </target>

    <target name="dist" depends="jar, jarStubs">
        <ant antfile="${build.packages}" target="makeGar">
            <reference refid="${garjars.id}"/>  
            <reference refid="${garetc.id}"/>
            <reference refid="${garschema.id}"/>  
        </ant>
    </target>

    <target name="clean">
        <delete dir="tmp"/>
        <delete dir="${build.dir}"/>
        <delete file="${gar.name}"/>
        <delete dir="${junit.reports.dir}"/>
    </target>

    <target name="deploy" depends="dist">
        <ant antfile="${build.packages}" target="deployGar"/>
    </target>  

    <target name="undeploy">
        <ant antfile="${build.packages}" target="undeployGar">
            <property name="gar.id" value="${package.name}"/>
        </ant>
    </target>

    <target name="all" depends="jar"/>

    <target name="test" depends="compile">
      <property name="server.arg" value="-Dignore" />
      <antcall target="runTests"/>
      <antcall target="runSecurityTests"/>
    </target>

    <target name="testServer" depends="compile">
      <property name="server.arg" 
                value="-Dweb.server.url=${test.server.url} -Dsecure.web.server.url=${secure.test.server.url}" />
      <antcall target="runTests"/>
      <antcall target="runSecurityTests"/>
    </target>

    <target name="runTests" unless="securityTestsOnly">
      <mkdir dir="${junit.reports.dir}" />
      <junit printsummary="yes" 
             haltonfailure="${junit.haltonfailure}" 
             fork="yes" 
             timeout="${junit.timeout}">
            <sysproperty key="org.globus.wsrf.container.webroot" 
                value="${deploy.dir}"/>
            <sysproperty key="GLOBUS_LOCATION"
                value="${deploy.dir}"/>
            <classpath>
                <pathelement location="${build.dest}"/>
                <pathelement location="${stubs.dest}"/>
                <pathelement location="${deploy.dir}"/>
                <fileset dir="${deploy.dir}/lib">
                    <include name="*.jar"/>
                    <exclude name="${stubs.jar.name}"/>
                    <exclude name="${jar.name}"/>
                </fileset>
            </classpath>
        <formatter type="xml" />
        <batchtest todir="${junit.reports.dir}">
         <fileset dir="${build.dest}">
            <include name="**/PackageTests.class" />
         </fileset>
        </batchtest>
        <jvmarg value="-Djava.endorsed.dirs=${deploy.dir}/endorsed"/>
        <jvmarg line="${server.arg}" />
        <jvmarg line="${junit.jvmarg}" />
      </junit>
    </target>
    
    <!-- These are security tests. They require valid credentials. -->
    <!-- Using "SecurityTests" as the required class name -->
    <target name="runSecurityTests" unless="basicTestsOnly">
      <mkdir dir="${junit.reports.dir}" />
      <junit printsummary="yes" 
             haltonfailure="${junit.haltonfailure}" 
             fork="yes" 
             timeout="${junit.timeout}">
            <sysproperty key="org.globus.wsrf.container.webroot" 
                value="${deploy.dir}"/>
            <sysproperty key="GLOBUS_LOCATION" 
                value="${deploy.dir}"/>
            <classpath>
                <pathelement location="${build.dest}"/>
                <pathelement location="${stubs.dest}"/>
                <pathelement location="${deploy.dir}"/>
                <fileset dir="${deploy.dir}/lib">
                    <include name="*.jar"/>
                    <exclude name="${stubs.jar.name}"/>
                    <exclude name="${jar.name}"/>
                </fileset>
            </classpath>
        <formatter type="xml" />
        <batchtest todir="${junit.reports.dir}">
         <fileset dir="${build.dest}">
            <include  name="**/SecurityTests.class"/>
         </fileset>
        </batchtest>
        <jvmarg value="-Djava.endorsed.dirs=${deploy.dir}/endorsed"/>
        <jvmarg line="${server.arg}" />
        <jvmarg line="${junit.jvmarg}" />
        <sysproperty key="securityType" value="${test.security.type}"/>
        <sysproperty key="protectionType" value="${test.protection.type}"/>
      </junit>
    </target>

</project>
