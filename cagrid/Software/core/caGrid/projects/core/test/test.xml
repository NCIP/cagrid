<!-- ======================================================================= -->
<!-- caGrid Utilities build file                                             -->
<!-- ======================================================================= -->
<project name="caGrid-core_tests_harness" basedir=".">
	<property name="junit.results.dir" value="${test.logs.dir}/junit" />
	<property name="coverage.results.dir" value="${test.logs.dir}/coverage"/>
	<property name="instrumented.classes.dir" value="${build.dir}/instrumented/classes"/>
	<property name="test.cobertura.datafile" value="${coverage.results.dir}/cobertura.ser" />
	
	<path id="cobertura.classpath">
		<fileset dir="${basedir}/ext/dependencies/coverage/jars">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<!-- define the cobertura ant tasks -->
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	
	<target name="instrument">
		<!--
			Remove the coverage data file and any old instrumentation.
		-->
		<delete file="${test.cobertura.datafile}" />
		<delete dir="${instrumented.classes.dir}" />
		<!--
			Instrument the application classes, writing the
			instrumented classes into ${build.instrumented.dir}.
		-->
		<cobertura-instrument todir="${instrumented.classes.dir}" datafile="${test.cobertura.datafile}">
			<!-- optionally ignore a set of packages
			<ignore regex="org.apache.log4j.*" />
			-->
			<fileset dir="${classes.dir}">
				<!-- instrument the main API classes -->
				<include name="**/*.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<!-- call the test target for each project and aggregates the log resutls  -->
	<target name="test" depends="instrument" description="Runs the tests.">
		<mkdir dir="${junit.results.dir}" />
		<junit dir="${basedir}" printsummary="yes" errorproperty="test.failed" failureproperty="test.failed" showoutput="true" fork="yes" forkmode="once">
			<sysproperty key="build.dir" value="${classes.dir}" />
			<!-- not using the default cobertura data file -->
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${test.cobertura.datafile}" />
			<jvmarg value="-Dbuild.dir=${classes.dir}" />
			<!-- include the cobertura instrumented classes first -->
			<classpath location="${instrumented.classes.dir}"/>
			<classpath refid="test.classpath" />
			<classpath>
				<pathelement path="${test.classes.dir}" />
			</classpath>
			<!-- the instrumented classes now depend on cobertura -->
			<classpath refid="cobertura.classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/*TestCase.java" />
					<exclude name="**/SchemaValidationTestCase.java" />
				</fileset>
			</batchtest>
		</junit>
		
		<cobertura-report datafile="${test.cobertura.datafile}" destdir="${coverage.results.dir}/html" srcdir="${src.dir}" />
		
		<fail message="Tests failed! Check test reports." if="test.failed" />
	</target>
</project>
