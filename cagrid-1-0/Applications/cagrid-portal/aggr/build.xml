<?xml version="1.0"?>

<project name="cagrid-portal-aggr" basedir="." default="all">

    <import file="${basedir}/../antfiles/build-common.xml"/>

    <property name="etc.dir" value="${basedir}/etc"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.jar.dir" value="${build.dir}/jars"/>
    <property name="build.xmls.dir" value="${build.dir}/xmls"/>
    <property name="javadocs.dest.dir" value="${build.dir}/javadocs"/>

    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="src.java.dir" value="${basedir}/src/java"/>

    <property name="test.dir" value="${basedir}/test"/>
    <property name="test.etc.dir" value="${test.dir}/etc"/>
    <property name="test.lib.dir" value="${test.dir}/lib"/>
    <property name="test.build.dir" value="${test.dir}/build"/>
    <property name="test.classes.dir" value="${test.build.dir}/classes"/>
    <property name="test.src.java.dir" value="${test.dir}/src/java"/>
    <property name="cobertura.datafile" value="${test.build.dir}/build/cobertura.datafile"/>
    <property name="junit.reports.dir" value="${test.build.dir}/junit-reports"/>

    <property name="ext.dir" value="${basedir}/ext"/>
    <property name="ext.compile.jar.dir" value="${ext.dir}/compile/jars"/>
    <property name="ext.default.jar.dir" value="${ext.dir}/default/jars"/>
    <property name="ext.default.xml.dir" value="${ext.dir}/default/xmls"/>
    <property name="ext.test.jar.dir" value="${ext.dir}/test/jars"/>
    <property name="ext.test.xml.dir" value="${ext.dir}/test/xmls"/>

    <property name="target.grid.dir" value="${ext.dir}/target_grid"/>
    <property name="target.grid.certs.dir" value="${target.grid.dir}/certificates"/>
    <property name="target.grid.xmls.dir" value="${target.grid.dir}/xmls"/>

    <property name="aggr.debug" value="${javac.debug.flag}"/>

    <path id="compile.cp">
        <fileset dir="${ext.compile.jar.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="run.cp">
        <path refid="compile.cp"/>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${build.xmls.dir}"/>
        <pathelement location="${ext.default.xml.dir}"/>
    </path>

    <path id="test.compile.cp">
        <fileset dir="${ext.test.jar.dir}">
            <include name="*.jar"/>
        </fileset>
        <!--using jar dir so that properties are not loaded-->
        <fileset dir="${build.jar.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.run.cp">
        <pathelement location="${test.etc.dir}"/>
        <pathelement location="${build.xmls.dir}"/>
        <pathelement location="${ext.test.xml.dir}"/>
        <pathelement location="${test.classes.dir}"/>
        <path refid="test.compile.cp"/>
    </path>

    <path id="integration.test.run.cp">
        <path refid="test.compile.cp"/>
        <path refid="run.cp"/>
        <fileset dir="${build.jar.dir}">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${test.classes.dir}"/>
    </path>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.java.dir}" destdir="${classes.dir}" debug="${aggr.debug}">
            <classpath refid="compile.cp"/>
        </javac>

        <copy todir="${classes.dir}" overwrite="true">
            <fileset dir="${etc.dir}">
                <include name="*.properties"/>
                <include name="*.wsdd"/>
            </fileset>
        </copy>

        <!--spring configs-->
        <copy todir="${build.xmls.dir}" overwrite="true">
            <fileset dir="${etc.dir}">
                <include name="applicationContext*.xml"/>
            </fileset>
            <fileset dir="${target.grid.xmls.dir}">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <!--Copy properties-->
        <antcall target="create-cagridportal-properties" inheritall="false">
            <param name="target.dir" value="${classes.dir}"/>
        </antcall>

    </target>

    <target name="compile-test" depends="jar">
        <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${test.src.java.dir}" destdir="${test.classes.dir}" debug="true">
            <classpath refid="test.compile.cp"/>
        </javac>
    </target>

    <target name="test" depends="compile-test" description="Execute all tests">
        <mkdir dir="${junit.reports.dir}"/>

        <junit dir="${basedir}" printsummary="yes" showoutput="true" fork="true">

            <!--needed to hook into main reporting task-->
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${cobertura.datafile}"/>

            <classpath refid="test.run.cp"/>
            <formatter type="xml"/>

            <batchtest todir="${junit.reports.dir}">
                <fileset dir="${test.src.java.dir}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*"/>
                    <exclude name="**/*Integration*"/>
                </fileset>
            </batchtest>

        </junit>
    </target>

    <target name="test-integration" depends="compile-test" description="Execute all Integration tests">
        <mkdir dir="${junit.reports.dir}"/>

        <junit dir="${basedir}" printsummary="yes" showoutput="true" fork="true">
            <sysproperty key="basedir" value="${basedir}"/>

            <formatter type="xml"/>
            <classpath refid="integration.test.run.cp"/>

            <batchtest todir="${junit.reports.dir}">
                <fileset dir="${test.src.java.dir}">
                    <include name="**/*IntegrationTest.java"/>
                </fileset>
            </batchtest>

        </junit>
    </target>

    <target name="test-single" depends="compile-test">

        <junit dir="${basedir}" printsummary="yes" showoutput="yes" fork="true" haltonfailure="yes">
            <sysproperty key="basedir" value="${basedir}"/>

            <formatter type="xml"/>
            <classpath>
                <path refid="test.run.cp"/>
            </classpath>

            <test name="gov.nih.nci.cagrid.portal.util.PortalUtilsIntegrationTest"/>

        </junit>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${build.jar.dir}"/>
        <jar basedir="${classes.dir}" excludes="*.properties"
             destfile="${build.jar.dir}/caGrid-portal-aggr.jar"/>
    </target>

    <target name="javadoc"
            description="Generate javadocs for this project. To be called from main build.">

        <javadoc packagenames="*" destdir="${javadocs.dest.dir}" author="true" version="true"
                 use="true" windowtitle="caGrid Portal API">
            <sourcepath>
                <pathelement location="${src.java.dir}"/>
            </sourcepath>

            <classpath>
                <pathelement location="${classes.dir}"/>
                <path refid="compile.cp"/>
            </classpath>

            <tag name="todo" scope="all" description="To do:"/>
            <tag name="created" scope="all" description="Created On:"/>

        </javadoc>
    </target>


    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${test.build.dir}"/>
        <delete dir="${test.build.dir}"/>
    </target>

    <target name="config-trust"
            description="Will sync the local globus trust store with the target grid">

        <mkdir dir="${user.home}/.globus/certificates"/>
        <copy todir="${user.home}/.globus/certificates" overwrite="true">
            <fileset dir="${target.grid.certs.dir}">
                <include name="*"/>
            </fileset>
        </copy>
    </target>

    <target name="run-regsvc">
        <java classname="gov.nih.nci.cagrid.portal.util.RunRegSvc" classpathref="run.cp" fork="true"
                />
    </target>

    <target name="run-metachange">
        <java classname="gov.nih.nci.cagrid.portal.util.RunMetaChange" classpathref="run.cp"
              fork="true"/>
    </target>

    <target name="run-status">
        <java classname="gov.nih.nci.cagrid.portal.util.RunStatusChange" classpathref="run.cp"
              fork="true"/>
    </target>

    <target name="run-trust">
        <java classname="gov.nih.nci.cagrid.portal.util.RunTrust" classpathref="run.cp" fork="true"
                />
    </target>

    <target name="run-geocode">
        <java classname="gov.nih.nci.cagrid.portal.util.RunGeocode" classpathref="run.cp"
              fork="true"/>
    </target>

    <target name="run-xmlschemas">
        <java classname="gov.nih.nci.cagrid.portal.util.RunXmlSchemas" classpathref="run.cp"
              fork="true"/>
    </target>

    <target name="run-kill-svc-meta">
        <java classname="gov.nih.nci.cagrid.portal.util.KillServiceMetadata" classpathref="run.cp"/>
    </target>

    <target name="run-kill-grid-svcs">
        <java classname="gov.nih.nci.cagrid.portal.util.KillGridServices" classpathref="run.cp"/>
    </target>

    <target name="run-load-workspaces">
        <java classname="gov.nih.nci.cagrid.portal.util.WorkspacesLoader" classpathref="run.cp"
              fork="true">
            <arg value="${basedir}/etc/caBIG_Workspaces_participants.xls"/>
        </java>
    </target>

    <target name="run-ban-mgr">
        <input message="Enter operation:" validargs="ban,unban" addproperty="banOp"/>
        <input message="Enter service URL:" addproperty="banOpUrl"/>
        <java classname="gov.nih.nci.cagrid.portal.util.ServiceBanManager" classpathref="run.cp">
            <arg value="${banOp}"/>
            <arg value="${banOpUrl}"/>
        </java>
    </target>

    <target name="all" depends="jar"/>


</project>
