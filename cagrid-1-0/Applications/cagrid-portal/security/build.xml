<project name="caGrid-portal-security" basedir=".">

    <import file="${basedir}/../antfiles/build-common.xml"/>

    <property name="etc.dir" value="${basedir}/etc"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.xml.dir" value="${build.dir}/xmls"/>

    <property name="build.jars.dir" value="${build.dir}/jars"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="javadocs.dest.dir" value="${build.dir}/javadocs"/>
    <property name="src.java.dir" value="${basedir}/src/java"/>

    <property name="ext.dir" value="${basedir}/ext"/>
    <property name="ext.lib.dir" value="${ext.dir}/default/jars"/>
    <property name="ext.test.lib.dir" value="${ext.dir}/test/jars"/>

    <property name="test.dir" value="${basedir}/test"/>
    <property name="test.lib.dir" value="${test.dir}/lib"/>
    <property name="test.build.dir" value="${test.dir}/build"/>
    <property name="test.build.classes.dir" value="${test.build.dir}/classes"/>
    <property name="test.src.java.dir" value="${test.dir}/src/java"/>
    <property name="junit.reports.dir" value="${test.build.dir}/junit-reports"/>
    <property name="cobertura.datafile" value="${test.build.dir}/build/cobertura.datafile"/>


    <property name="security.debug" value="true"/>

    <path id="compile.cp">
        <fileset dir="${ext.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <path id="test.compile.cp">
        <fileset dir="${ext.test.lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <path path="${build.classes.dir}"/>
    </path>

    <path id="test.run.cp">
        <path refid="test.compile.cp"/>
        <path path="${test.build.classes.dir}"/>
    </path>


    <target name="compile">
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="${src.java.dir}" destdir="${build.classes.dir}" debug="${security.debug}">
            <classpath refid="compile.cp"/>
        </javac>

        <mkdir dir="${build.xml.dir}"/>
        <copy todir="${build.xml.dir}" overwrite="true">
            <fileset dir="${etc.dir}">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${test.build.classes.dir}"/>
        <javac srcdir="${test.src.java.dir}" destdir="${test.build.classes.dir}" debug="true">
            <classpath refid="test.compile.cp"/>
        </javac>
    </target>


    <target name="test" depends="compile-test" description="Run all tests in the project">
        <mkdir dir="${junit.reports.dir}"/>

        <junit dir="${test.dir}" printsummary="yes" showoutput="true" fork="true">

            <!--needed to hook into main reporting task-->
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${cobertura.datafile}"/>

            <classpath refid="test.run.cp"/>
            <formatter type="xml"/>

            <batchtest todir="${junit.reports.dir}">
                <fileset dir="${test.src.java.dir}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>

        </junit>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${build.jars.dir}"/>
        <jar basedir="${build.classes.dir}"
             destfile="${build.jars.dir}/caGrid-portal-security.jar"/>
    </target>


    <target name="javadoc"
            description="Generate javadocs for this project. To be called from main build.">

        <javadoc packagenames="*" destdir="${javadocs.dest.dir}" author="true" version="true"
                 use="true" windowtitle="caGrid Portal API">
            <sourcepath>
                <pathelement location="${src.java.dir}"/>
            </sourcepath>

            <classpath>
                <pathelement location="${build.classes.dir}"/>
                <path refid="compile.cp"/>
            </classpath>

            <tag name="todo" scope="all" description="To do:"/>
            <tag name="created" scope="all" description="Created On:"/>

        </javadoc>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${test.build.dir}"/>
    </target>


    <target name="all" depends="jar"/>

</project>
