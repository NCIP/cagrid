<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Secure Client Usage</TITLE>
<META http-equiv=Content-Type content="text/html; charset=Windows-1252"><LINK 
href="Theme/lf.css" type=text/css rel=stylesheet><LINK 
href="LinksExt/C1H_HTML.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.6001.18203" name=GENERATOR></HEAD>
<BODY 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; BACKGROUND-COLOR: transparent" 
relPart="">
<DIV class=d2h_secondary_topic 
style="PADDING-RIGHT: 0pt; PADDING-LEFT: 0pt; PADDING-BOTTOM: 10pt; MARGIN: 0pt; PADDING-TOP: 0pt">
<H4><A name=DevelopersGuide-Clientandsecurity></A><A 
name=DevelopersGuide-SecureClientUsage></A>Secure Client Usage</H4>
<P class=msonormal>Introduce generated client code can utilize a certificate to 
communicate with its service securely. This certificate can come from many 
places; it may be a user certificate or a host certificate or some other 
certificate received from a delegation service for example. The client by 
default will attempt to use the credential in the default location in the users 
home directory. So for example, if you logged in using Dorian the credential 
would be written to the file system in the default location and your client 
would automatically use that credential when required by the service. If you 
want the client to use a different certificate you must pass that certificate 
into the constructor of the client or by calling the setProxy operation on the 
client. When the client makes a call to the service it will check the security 
metadata which tells the client how to configure itself so that it can properly 
communicate with the service. Even though a service's method is set to require 
secure communication, this does not mean the client will always use its own 
credentials. Introduce generated clients by default will connect anonymously to 
methods that allow both anonymous and non-anonymous access. If you want your 
client to use its credentials to invoke a method, even though that method can be 
invoked anonymously, you can set the client to prefer not connecting 
anonymously. This will force the client to use its own credentials to 
communicate with the service as opposed to connecting anonymously. In order to 
do this you must call the setAnonymousPrefered operation on the client you are 
using:</P>
<P class=msonormal 
style="tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt">client.setAnonymousPrefered(false);</P>
<P class=msonormal>The client will then connect with credentials always until 
you set this back to true letting the client know it is ok to connect 
anonymously to methods that allow anonymous users. The reason for having this 
capability is because there may be methods that change the way they work based 
on who they are talking to. If they are talking to an anonymous user they may 
not return all the data and if the user has authenticated using their 
credentials than maybe they get back more privileged information.</P>
<P class=msonormal>You can also change the proxy (the credentials) that your 
client is using by calling the setProxy operation and passing in the new 
credentials you now want to use.</P>
<P class=msonormal 
style="tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt">client.setProxy(newCredentials);</P></DIV></BODY></HTML>
