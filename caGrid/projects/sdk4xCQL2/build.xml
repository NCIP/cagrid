<!-- ======================================================================= -->
<!-- caGrid CQL 2 caCORE SDK 4.x Query Processor build file                  -->
<!-- ======================================================================= -->
<project name="caGrid-sdk4xCQL2" default="all" basedir=".">
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property file="${basedir}/build.properties" />
	<property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

	<!-- build with debugging information -->
	<property name="java.debug" value="on" />
	<!-- enforce java 1.5 compliance at build time -->
	<property name="java.source" value="1.5" />

	<!-- Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="project.jar.prefix" value="${project.name}-" />
	<property name="project.jar.suffix" value="-${project.version}.jar" />

	<!-- build output dirs -->
	<property name="build.dir" location="build" />
	<property name="build.processor.dest" location="${build.dir}/processor" />
	<property name="build.jars.dir" location="build/lib" />
	
	<!-- jar names -->
	<property name="processor.jar.name" value="${project.jar.prefix}processor${project.jar.suffix}" />
	
	<!-- jar files -->
	<property name="processor.jar.file" value="${build.jars.dir}/${processor.jar.name}" />
	
	<!-- source directories -->
	<property name="processor.src.dir" location="${basedir}/src/java/processor" />
	
	<!-- libraries -->
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="ext.lib.dir" location="${basedir}/ext/dependencies/jars" />
	<property name="ext.test.lib.dir" location="${basedir}/ext/dependencies/test/jars" />

	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src" />
	<property name="test.classes.dir" location="${build.dir}/test/classes" />
	<property name="test.logs.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${build.jars.dir}/${project.jar.prefix}tests${project.jar.suffix}" />
	<!-- for testing - comma separated class directories -->
	<property name="build.dirs.list" value="${build.processor.dest}"/>
	<import file="test\test.xml" />

	<!-- =============================================================== -->
	<!-- The Build Classpath                                             -->
	<!-- =============================================================== -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
			<!-- castor is supplied from the remote-client -->
			<exclude name="castor-0.9.9.jar" />
		</fileset>
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
            <exclude name="junit.jar"/>
		</fileset>

		<pathelement location="${build.beans.dest}" />
	</path>


	<!-- =============================================================== -->
	<!-- The Test Classpaths                                             -->
	<!-- =============================================================== -->
	<path id="test.base.classpath">
		<path refid="build.classpath"/>
		<pathelement location="${build.processor.dest}" />
	</path>

	
	<path id="test.build.classpath">
		<fileset dir="${test.dir}/lib/sdk4.0">
			<include name="**/*.jar"/>
			<!--
			<include name="hibernate3.jar"/>
			<include name="sdk-client-framework.jar"/>
			-->
		</fileset>
		<path refid="test.base.classpath"/>
	</path>
	
	
	<!-- creates output directories -->
	<target name="init" depends="defineContribTasks">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.jars.dir}" />
		<mkdir dir="${build.processor.dest}" />
		<mkdir dir="${test.classes.dir}" />
	</target>


	<target name="defineContribTasks">
		<!-- using ant contrib for contidionals, looping, and runtarget -->
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="ant-contrib*.jar" />
				</fileset>
			</classpath>
		</taskdef>
	</target>


	<!-- compiles the query processor source code -->
	<target name="compileProcessor" depends="init">
		<javac srcdir="${processor.src.dir}" destdir="${build.processor.dest}" debug="${java.debug}" source="${java.source}">
			<classpath refid="build.classpath" />
			<include name="**/*.java" />
		</javac>
	</target>


	<!-- compiles the testing source code -->
	<target name="compileTests" depends="compileProcessor">
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" debug="${java.debug}" source="${java.source}">
			<classpath refid="test.build.classpath"/>
			<include name="**/*.java" />
			<exclude name="HQLRunner.java"/>
		</javac>
	</target>

	
	<!-- jars the processor -->
	<target name="jarProcessor" depends="compileProcessor" description="Builds the processor jar file">
		<jar destfile="${processor.jar.file}">
			<fileset dir="${build.processor.dest}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${processor.src.dir}">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>


	<!-- jars the tests -->
	<target name="jarTests" depends="compileTests" description="Builds the testing jar file">
		<jar destfile="${test.project.jar}">
			<fileset dir="${test.classes.dir}">
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>

	
	<!-- removes all build output -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>


	<!-- build and jar everything -->
	<target name="all" depends="jarProcessor, jarTests" description="Builds and jars all the classes in the project" />
</project>
